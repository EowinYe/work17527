name: "GoogleNet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  data_param {
    source: "../ilsvrc12_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 224
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  data_param {
    source: "../ilsvrc12_val_lmdb"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s2"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool1/bn_3x3"
  type: "BatchNorm"
  bottom: "pool1/3x3_s2"
  top: "pool1/3x3_s2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "conv2/qt_3x3_reduce"
  type: "Quant"
  bottom: "pool1/3x3_s2"
  top: "conv2/qt_3x3_reduce"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "conv2/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "conv2/qt_3x3_reduce"
  top: "conv2/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "conv2/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "conv2/qt_3x3"
  type: "Quant"
  bottom: "conv2/3x3_reduce"
  top: "conv2/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "conv2/3x3"
  type: "BinaryConvolution"
  bottom: "conv2/qt_3x3"
  top: "conv2/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/3x3"
  top: "pool2/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool2/bn_3x3"
  type: "BatchNorm"
  bottom: "pool2/3x3_s2"
  top: "pool2/3x3_s2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_3a/qt"
  type: "Quant"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_3a/1x1"
  type: "BinaryConvolution"
  bottom: "inception_3a/qt"
  top: "inception_3a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3a/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_3a/qt"
  top: "inception_3a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3a/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_3a/qt_3x3"
  type: "Quant"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_3a/3x3"
  type: "BinaryConvolution"
  bottom: "inception_3a/qt_3x3"
  top: "inception_3a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3a/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_3a/qt"
  top: "inception_3a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3a/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_3a/qt_5x5"
  type: "Quant"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_3a/5x5"
  type: "BinaryConvolution"
  bottom: "inception_3a/qt_5x5"
  top: "inception_3a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3a/output"
  type: "Concat"
  bottom: "inception_3a/1x1"
  bottom: "inception_3a/3x3"
  bottom: "inception_3a/5x5"
  top: "inception_3a/output"
}
layer {
  name: "inception_3a/bn_output"
  type: "BatchNorm"
  bottom: "inception_3a/output"
  top: "inception_3a/output"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer {
  name: "inception_3b/qt"
  type: "Quant"
  bottom: "inception_3a/output"
  top: "inception_3b/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_3b/1x1"
  type: "BinaryConvolution"
  bottom: "inception_3b/qt"
  top: "inception_3b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3b/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_3b/qt"
  top: "inception_3b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3b/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_3b/qt_3x3"
  type: "Quant"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_3b/3x3"
  type: "BinaryConvolution"
  bottom: "inception_3b/qt_3x3"
  top: "inception_3b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3b/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_3b/qt"
  top: "inception_3b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3b/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_3b/qt_5x5"
  type: "Quant"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_3b/5x5"
  type: "BinaryConvolution"
  bottom: "inception_3b/qt_5x5"
  top: "inception_3b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_3b/output"
  type: "Concat"
  bottom: "inception_3b/1x1"
  bottom: "inception_3b/3x3"
  bottom: "inception_3b/5x5"
  top: "inception_3b/output"
}
layer {
  name: "pool3/3x3_s2"
  type: "Pooling"
  bottom: "inception_3b/output"
  top: "pool3/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool3/bn_3x3"
  type: "BatchNorm"
  bottom: "pool3/3x3_s2"
  top: "pool3/3x3_s2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4a/qt"
  type: "Quant"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4a/1x1"
  type: "BinaryConvolution"
  bottom: "inception_4a/qt"
  top: "inception_4a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4a/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4a/qt"
  top: "inception_4a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 208
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4a/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4a/qt_3x3"
  type: "Quant"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4a/3x3"
  type: "BinaryConvolution"
  bottom: "inception_4a/qt_3x3"
  top: "inception_4a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 208
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4a/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4a/qt"
  top: "inception_4a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4a/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4a/qt_5x5"
  type: "Quant"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4a/5x5"
  type: "BinaryConvolution"
  bottom: "inception_4a/qt_5x5"
  top: "inception_4a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4a/output"
  type: "Concat"
  bottom: "inception_4a/1x1"
  bottom: "inception_4a/3x3"
  bottom: "inception_4a/5x5"
  top: "inception_4a/output"
}
layer {
  name: "inception_4a/bn_output"
  type: "BatchNorm"
  bottom: "inception_4a/output"
  top: "inception_4a/output"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4b/qt"
  type: "Quant"
  bottom: "inception_4a/output"
  top: "inception_4b/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4b/1x1"
  type: "BinaryConvolution"
  bottom: "inception_4b/qt"
  top: "inception_4b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 224
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4b/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4b/qt"
  top: "inception_4b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 224
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4b/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4b/qt_3x3"
  type: "Quant"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4b/3x3"
  type: "BinaryConvolution"
  bottom: "inception_4b/qt_3x3"
  top: "inception_4b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4b/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4b/qt"
  top: "inception_4b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4b/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4b/qt_5x5"
  type: "Quant"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4b/5x5"
  type: "BinaryConvolution"
  bottom: "inception_4b/qt_5x5"
  top: "inception_4b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4b/output"
  type: "Concat"
  bottom: "inception_4b/1x1"
  bottom: "inception_4b/3x3"
  bottom: "inception_4b/5x5"
  top: "inception_4b/output"
}
layer {
  name: "inception_4b/bn_output"
  type: "BatchNorm"
  bottom: "inception_4b/output"
  top: "inception_4b/output"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4c/qt"
  type: "Quant"
  bottom: "inception_4b/output"
  top: "inception_4c/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4c/1x1"
  type: "BinaryConvolution"
  bottom: "inception_4c/qt"
  top: "inception_4c/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4c/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4c/qt"
  top: "inception_4c/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4c/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4c/qt_3x3"
  type: "Quant"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4c/3x3"
  type: "BinaryConvolution"
  bottom: "inception_4c/qt_3x3"
  top: "inception_4c/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4c/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4c/qt"
  top: "inception_4c/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4c/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4c/qt_5x5"
  type: "Quant"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4c/5x5"
  type: "BinaryConvolution"
  bottom: "inception_4c/qt_5x5"
  top: "inception_4c/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4c/output"
  type: "Concat"
  bottom: "inception_4c/1x1"
  bottom: "inception_4c/3x3"
  bottom: "inception_4c/5x5"
  top: "inception_4c/output"
}
layer {
  name: "inception_4c/bn_output"
  type: "BatchNorm"
  bottom: "inception_4c/output"
  top: "inception_4c/output"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4d/qt"
  type: "Quant"
  bottom: "inception_4c/output"
  top: "inception_4d/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4d/1x1"
  type: "BinaryConvolution"
  bottom: "inception_4d/qt"
  top: "inception_4d/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 176
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4d/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4d/qt"
  top: "inception_4d/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 288
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4d/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4d/qt_3x3"
  type: "Quant"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4d/3x3"
  type: "BinaryConvolution"
  bottom: "inception_4d/qt_3x3"
  top: "inception_4d/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 288
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4d/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4d/qt"
  top: "inception_4d/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4d/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4d/qt_5x5"
  type: "Quant"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4d/5x5"
  type: "BinaryConvolution"
  bottom: "inception_4d/qt_5x5"
  top: "inception_4d/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4d/output"
  type: "Concat"
  bottom: "inception_4d/1x1"
  bottom: "inception_4d/3x3"
  bottom: "inception_4d/5x5"
  top: "inception_4d/output"
}
layer {
  name: "inception_4d/bn_output"
  type: "BatchNorm"
  bottom: "inception_4d/output"
  top: "inception_4d/output"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer {
  name: "inception_4e/qt"
  type: "Quant"
  bottom: "inception_4d/output"
  top: "inception_4e/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4e/1x1"
  type: "BinaryConvolution"
  bottom: "inception_4e/qt"
  top: "inception_4e/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 384
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4e/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4e/qt"
  top: "inception_4e/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 320
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4e/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4e/qt_3x3"
  type: "Quant"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4e/3x3"
  type: "BinaryConvolution"
  bottom: "inception_4e/qt_3x3"
  top: "inception_4e/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4e/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_4e/qt"
  top: "inception_4e/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4e/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_4e/qt_5x5"
  type: "Quant"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_4e/5x5"
  type: "BinaryConvolution"
  bottom: "inception_4e/qt_5x5"
  top: "inception_4e/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_4e/output"
  type: "Concat"
  bottom: "inception_4e/1x1"
  bottom: "inception_4e/3x3"
  bottom: "inception_4e/5x5"
  top: "inception_4e/output"
}
layer {
  name: "pool4/3x3_s2"
  type: "Pooling"
  bottom: "inception_4e/output"
  top: "pool4/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool4/bn_3x3"
  type: "BatchNorm"
  bottom: "pool4/3x3_s2"
  top: "pool4/3x3_s2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer {
  name: "inception_5a/qt"
  type: "Quant"
  bottom: "pool4/3x3_s2"
  top: "inception_5a/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_5a/1x1"
  type: "BinaryConvolution"
  bottom: "inception_5a/qt"
  top: "inception_5a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 384
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5a/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_5a/qt"
  top: "inception_5a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 320
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5a/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_5a/qt_3x3"
  type: "Quant"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_5a/3x3"
  type: "BinaryConvolution"
  bottom: "inception_5a/qt_3x3"
  top: "inception_5a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5a/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_5a/qt"
  top: "inception_5a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5a/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_5a/5x5_reduce"
  top: "inception_5a/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_5a/qt_5x5"
  type: "Quant"
  bottom: "inception_5a/5x5_reduce"
  top: "inception_5a/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_5a/5x5"
  type: "BinaryConvolution"
  bottom: "inception_5a/qt_5x5"
  top: "inception_5a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5a/output"
  type: "Concat"
  bottom: "inception_5a/1x1"
  bottom: "inception_5a/3x3"
  bottom: "inception_5a/5x5"
  top: "inception_5a/output"
}
layer {
  name: "inception_5a/bn_output"
  type: "BatchNorm"
  bottom: "inception_5a/output"
  top: "inception_5a/output"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_5b/qt"
  type: "Quant"
  bottom: "inception_5a/output"
  top: "inception_5b/qt"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_5b/1x1"
  type: "BinaryConvolution"
  bottom: "inception_5b/qt"
  top: "inception_5b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5b/3x3_reduce"
  type: "BinaryConvolution"
  bottom: "inception_5b/qt"
  top: "inception_5b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 384
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5b/bn_3x3_reduce"
  type: "BatchNorm"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_5b/qt_3x3"
  type: "Quant"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/qt_3x3"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_5b/3x3"
  type: "BinaryConvolution"
  bottom: "inception_5b/qt_3x3"
  top: "inception_5b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5b/5x5_reduce"
  type: "BinaryConvolution"
  bottom: "inception_5b/qt"
  top: "inception_5b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5b/bn_5x5_reduce"
  type: "BatchNorm"
  bottom: "inception_5b/5x5_reduce"
  top: "inception_5b/5x5_reduce"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_5b/qt_5x5"
  type: "Quant"
  bottom: "inception_5b/5x5_reduce"
  top: "inception_5b/qt_5x5"
  quant_param {
    forward_func: "hwgq"
    backward_func: "relu"
    centers: 0.538 centers: 1.076 centers: 1.614
    clip_thr: 1.614
  }
}
layer {
  name: "inception_5b/5x5"
  type: "BinaryConvolution"
  bottom: "inception_5b/qt_5x5"
  top: "inception_5b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
  binary_convolution_param {
    use_alpha: true
  }
}
layer {
  name: "inception_5b/output"
  type: "Concat"
  bottom: "inception_5b/1x1"
  bottom: "inception_5b/3x3"
  bottom: "inception_5b/5x5"
  top: "inception_5b/output"
}
layer {
  name: "inception_5b/bn_output"
  type: "BatchNorm"
  bottom: "inception_5b/output"
  top: "inception_5b/output"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}
layer {
  name: "inception_5b/scale_output"
  type: "Scale"
  bottom: "inception_5b/output"
  top: "inception_5b/output"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5b/relu_output"
  type: "ReLU"
  bottom: "inception_5b/output"
  top: "inception_5b/output"
}
layer {
  name: "pool5/7x7_s1"
  type: "Pooling"
  bottom: "inception_5b/output"
  top: "pool5/7x7_s1"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
layer {
  name: "classifier"
  type: "InnerProduct"
  bottom: "pool5/7x7_s1"
  top: "classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "classifier"
  bottom: "label"
  top: "loss"
  loss_weight: 1
}
layer {
  name: "accuracy-top1"
  type: "Accuracy"
  bottom: "classifier"
  bottom: "label"
  top: "accuracy-top1"
}
layer {
  name: "accuracy-top5"
  type: "Accuracy"
  bottom: "classifier"
  bottom: "label"
  top: "accuracy-top5"
  accuracy_param {
    top_k: 5
  }
}
